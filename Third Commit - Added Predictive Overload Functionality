# Part 3: Third Commit - Added Predictive Overload Functionality
import psutil
import numpy as np

L_HIGH = 80
L_LOW = 30
cpu_history = []

def get_cpu_load():
    return psutil.cpu_percent(percpu=True)

def balance_load(cpu_loads):
    max_idx = cpu_loads.index(max(cpu_loads))
    min_idx = cpu_loads.index(min(cpu_loads))
    if cpu_loads[max_idx] > L_HIGH and cpu_loads[min_idx] < L_LOW:
        print(f"⚖️ Moving tasks from CPU {max_idx} ➡ CPU {min_idx}")
        return max_idx, min_idx
    return None, None

def predict_overload():
    global cpu_history
    if len(cpu_history) < 5:
        return None
    avg_usage = np.mean(cpu_history[-5:], axis=0)
    for i, usage in enumerate(avg_usage):
        if usage > L_HIGH - 10:
            return i
    return None

# --- End of Part 3 ---
